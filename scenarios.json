{
  "meta": {
    "version": "1.0.0",
    "brand": "Third Wave Coffee",
    "audience": "barista",
    "created_at": "2025-08-11T13:13:59.351175"
  },
  "scenarios": [
    {
      "id": "delay_dinein_01",
      "title": "Order delayed (dine-in)",
      "level": 1,
      "trigger": "Guest says they’ve been waiting too long for their order at the table.",
      "facts": {
        "order_type": "live",
        "evidence": [
          "KOT shows prep time over SLA"
        ]
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "solutionize",
          "thank"
        ],
        "actions": [
          "check_kot",
          "expedite"
        ],
        "empowerment": "replace_only"
      },
      "gold_script": [
        "I’m sorry you’ve waited, Ma’am/Sir. Give me a moment—I’ll check your KOT and get it out right away.",
        "Thank you for your patience; I’ll make sure this reaches you now."
      ],
      "escalate_if": [
        "guest_demands_refund",
        "aggression"
      ],
      "pitfalls": [
        "defensive_tone",
        "empty_promises"
      ],
      "tags": [
        "dinein",
        "ops",
        "timeliness"
      ]
    },
    {
      "id": "wrong_order_01",
      "title": "Wrong order served (dine-in)",
      "level": 1,
      "trigger": "Guest says this isn’t what they ordered.",
      "facts": {
        "order_type": "live"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "solutionize",
          "thank"
        ],
        "actions": [
          "verify_bill_or_table",
          "replace_immediately"
        ],
        "empowerment": "replace_only"
      },
      "gold_script": [
        "I’m really sorry—let me confirm your bill/table number and get the correct order out fresh right away."
      ],
      "escalate_if": [
        "guest_demands_refund"
      ],
      "pitfalls": [
        "blame_kitchen",
        "defensive_tone"
      ],
      "tags": [
        "dinein",
        "accuracy"
      ]
    },
    {
      "id": "missed_customization_01",
      "title": "Customization missed (less ice / extra hot / vanilla)",
      "level": 1,
      "trigger": "Guest says customization wasn’t followed.",
      "facts": {
        "order_type": "live"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "solutionize",
          "thank"
        ],
        "actions": [
          "mirror_customization",
          "replace_immediately"
        ],
        "empowerment": "replace_only"
      },
      "gold_script": [
        "I’m really sorry—that wasn’t ideal. You’d asked for ___. I’ll fix it now and bring it fresh."
      ],
      "escalate_if": [
        "guest_demands_refund"
      ],
      "pitfalls": [
        "argue_about_recipe"
      ],
      "tags": [
        "dinein",
        "customization"
      ]
    },
    {
      "id": "stale_or_not_hot_01",
      "title": "Product tastes stale / not hot",
      "level": 1,
      "trigger": "Guest says the item tastes stale or isn’t hot enough.",
      "facts": {
        "order_type": "live"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "solutionize",
          "thank"
        ],
        "actions": [
          "remove_on_salver",
          "replace_immediately"
        ],
        "empowerment": "replace_only"
      },
      "gold_script": [
        "I’m extremely sorry for this. Allow me to replace your order immediately."
      ],
      "escalate_if": [
        "guest_demands_refund",
        "illness_claim"
      ],
      "pitfalls": [
        "debate_taste",
        "leave_item_on_table"
      ],
      "tags": [
        "dinein",
        "quality"
      ]
    },
    {
      "id": "foreign_object_hint_01",
      "title": "Possible foreign object (crumbs on rim / hair on plate)",
      "level": 2,
      "trigger": "Guest points to something that shouldn’t be there.",
      "facts": {
        "order_type": "live"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize"
        ],
        "actions": [
          "remove_product",
          "call_mod_immediately",
          "replace_immediately"
        ],
        "empowerment": "escalate_mod"
      },
      "gold_script": [
        "I’m truly sorry. I’ll get my manager right away and replace this for you."
      ],
      "escalate_if": [
        "any_confirmation_of_foreign_object"
      ],
      "pitfalls": [
        "repeat_claim_verbatim",
        "delay_escalation"
      ],
      "tags": [
        "dinein",
        "safety",
        "escalation"
      ]
    },
    {
      "id": "didnt_like_01",
      "title": "Guest didn’t like the product (preference)",
      "level": 1,
      "trigger": "Guest says they don’t enjoy the item.",
      "facts": {
        "order_type": "live"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "solutionize",
          "thank"
        ],
        "actions": [
          "ask_specific_issue",
          "offer_replacement_same_category"
        ],
        "empowerment": "replace_only"
      },
      "gold_script": [
        "I’m sorry it missed the mark. What didn’t work for you? Let me replace it with something you’ll enjoy."
      ],
      "escalate_if": [
        "guest_demands_refund"
      ],
      "pitfalls": [
        "force_refund_promise"
      ],
      "tags": [
        "dinein",
        "preference"
      ]
    },
    {
      "id": "insects_in_store_01",
      "title": "Insects seen inside store",
      "level": 2,
      "trigger": "Guest points out insects nearby.",
      "facts": {
        "order_type": "environment"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "thank"
        ],
        "actions": [
          "shift_guest_to_new_table",
          "log_pest_control_ticket"
        ],
        "empowerment": "ops_followup"
      },
      "gold_script": [
        "I am very sorry, Ma’am/Sir. Let me shift you to another table while we take care of this."
      ],
      "escalate_if": [],
      "pitfalls": [
        "ignore_issue"
      ],
      "tags": [
        "environment",
        "hygiene"
      ]
    },
    {
      "id": "dirty_restroom_01",
      "title": "Restroom dirty or stinking",
      "level": 1,
      "trigger": "Guest complains about restroom cleanliness.",
      "facts": {
        "order_type": "environment"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "thank"
        ],
        "actions": [
          "deploy_cleaning_immediately",
          "confirm_done_to_guest"
        ],
        "empowerment": "ops_followup"
      },
      "gold_script": [
        "I’m extremely sorry for this. I’ll get it cleaned right away and let you know once it’s done."
      ],
      "escalate_if": [],
      "pitfalls": [
        "no_close_loop"
      ],
      "tags": [
        "environment",
        "housekeeping"
      ]
    },
    {
      "id": "wobbly_furniture_01",
      "title": "Wobbly/dirty furniture",
      "level": 1,
      "trigger": "Guest complains table/chair is wobbly or dirty.",
      "facts": {
        "order_type": "environment"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "thank"
        ],
        "actions": [
          "offer_alternate_table",
          "fix_or_clean_after"
        ],
        "empowerment": "ops_followup"
      },
      "gold_script": [
        "I’m extremely sorry for this. While we fix/clean this table, would you be okay shifting to another table?"
      ],
      "escalate_if": [],
      "pitfalls": [
        "ask_guest_to_wait_at_same_table"
      ],
      "tags": [
        "environment"
      ]
    },
    {
      "id": "wifi_not_working_01",
      "title": "Wi‑Fi not working",
      "level": 1,
      "trigger": "Guest says café Wi‑Fi isn’t working.",
      "facts": {
        "order_type": "environment"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "thank"
        ],
        "actions": [
          "basic_troubleshoot",
          "check_with_concerned_team",
          "update_guest"
        ],
        "empowerment": "ops_followup"
      },
      "gold_script": [
        "I’m sorry, Ma’am/Sir. Give me a moment; I’ll check and get back to you."
      ],
      "escalate_if": [],
      "pitfalls": [
        "shrug_off_issue"
      ],
      "tags": [
        "environment",
        "tech"
      ]
    },
    {
      "id": "app_not_working_01",
      "title": "TWC app problems (scan/pay/redeem)",
      "level": 1,
      "trigger": "Guest can’t scan, pay, or redeem offers on TWC app.",
      "facts": {
        "order_type": "tech"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "thank"
        ],
        "actions": [
          "suggest_restart_update_network",
          "inform_if_server_issue"
        ],
        "empowerment": "ops_followup"
      },
      "gold_script": [
        "I’m sorry for the trouble. Could you try restarting/updating the app and checking your network? If it’s on our side, I’ll update you."
      ],
      "escalate_if": [],
      "pitfalls": [
        "overpromise_fix"
      ],
      "tags": [
        "tech"
      ]
    },
    {
      "id": "aggregator_changes_01",
      "title": "Aggregator change request after order placed",
      "level": 1,
      "trigger": "Guest calls café to modify a Swiggy/Zomato order.",
      "facts": {
        "order_type": "aggregator"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "apologize",
          "thank"
        ],
        "actions": [
          "politely_route_to_app_flow"
        ],
        "empowerment": "route_only"
      },
      "gold_script": [
        "Absolutely, Ma’am/Sir. May I request you to raise the request through the app you ordered from? Then we can proceed."
      ],
      "escalate_if": [],
      "pitfalls": [
        "accept_liability"
      ],
      "tags": [
        "aggregator"
      ]
    },
    {
      "id": "aggregator_delivery_issue_01",
      "title": "Aggregator delivery issues (delay/unreachable/not delivered)",
      "level": 1,
      "trigger": "Guest calls café about delivery delay or missing delivery partner.",
      "facts": {
        "order_type": "aggregator"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "thank"
        ],
        "actions": [
          "politely_route_to_app_flow",
          "inform_current_status_if_known"
        ],
        "empowerment": "route_only"
      },
      "gold_script": [
        "I’m sorry about the inconvenience. May I request you to raise it through the app you ordered from?"
      ],
      "escalate_if": [],
      "pitfalls": [
        "promise_compensation"
      ],
      "tags": [
        "aggregator"
      ]
    },
    {
      "id": "aggregator_product_issue_01",
      "title": "Aggregator product problems (missing/wrong/spillage/foreign object)",
      "level": 2,
      "trigger": "Guest reports product issues for a delivery order.",
      "facts": {
        "order_type": "aggregator"
      },
      "expected": {
        "least": [
          "listen",
          "empathize",
          "thank"
        ],
        "actions": [
          "politely_route_to_app_flow"
        ],
        "empowerment": "route_only"
      },
      "gold_script": [
        "We’re very sorry for the inconvenience. Please raise the request through the app you ordered from."
      ],
      "escalate_if": [],
      "pitfalls": [
        "accept_liability",
        "promise_refund"
      ],
      "tags": [
        "aggregator",
        "product"
      ]
    },
    {
      "id": "positive_feedback_01",
      "title": "Positive feedback",
      "level": 0,
      "trigger": "Guest compliments the café/product/service.",
      "facts": {
        "order_type": "na"
      },
      "expected": {
        "least": [
          "thank"
        ],
        "actions": [
          "warm_acknowledgement"
        ],
        "empowerment": "na"
      },
      "gold_script": [
        "We’re thrilled you enjoyed your visit. Thank you—and we’ll be happy to serve you again!"
      ],
      "escalate_if": [],
      "pitfalls": [],
      "tags": [
        "positive"
      ]
    },
    {
      "id": "neutral_feedback_01",
      "title": "Neutral feedback / suggestions",
      "level": 0,
      "trigger": "Guest shares suggestions (decaf, pets, new location).",
      "facts": {
        "order_type": "na"
      },
      "expected": {
        "least": [
          "listen",
          "thank"
        ],
        "actions": [
          "acknowledge_and_pass_on"
        ],
        "empowerment": "na"
      },
      "gold_script": [
        "Absolutely—we’ll pass your feedback to the relevant team. Thanks for sharing!"
      ],
      "escalate_if": [],
      "pitfalls": [
        "overpromise"
      ],
      "tags": [
        "neutral"
      ]
    }
  ]
}